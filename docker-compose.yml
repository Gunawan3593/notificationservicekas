version: '3.9'
services:
    # WEB APP
    app:
        image: app
        container_name: appnotificationservice
        build:
            context: .
            dockerfile: ./docker/Dockerfile
            args:
                - PHP_VERSION=${PHP_VERSION:-8.1.12}
        volumes:
            - ./:/var/www/app
            - /var/www/app/vendor
        extra_hosts:
            - "internal.host:host-gateway"
        ports:
            - "9000:9000"
        networks:
            - notification-service
    # web SERVER
    nginx:
        image: nginx:latest
        container_name: nginxnotification
        ports:
            - "${APP_PORT:-8283}:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:cached
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:cached
            - ./:/var/www/app:cached
        restart: on-failure
        depends_on:
            - app
        networks:
            - notification-service

    # WEB BROKER
    # rabbitmq:
    #     image: rabbitmq:3-management-alpine
    #     container_name: brokernotification
    #     ports:
    #         - 5673:5672
    #         - 15673:15672
    #     volumes:
    #         - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
    #         - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    #     restart: always
    #     networks:
    #         - notification-service

    #MySQL Service
    db:
        image: mysql:latest
        container_name: dbmysql
        restart: unless-stopped
        tty: true
        ports:
            - "3307:3306"
        environment:
            MYSQL_DATABASE: notificationservice
            MYSQL_ROOT_PASSWORD: 1nD0n3s14
            MYSQL_USER: notifservice
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbmysql:/var/lib/mysql
            - ./docker/dbmysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - notification-service

    # WEB QUEUE
    supervisor:
        image: app
        container_name: supervisor
        networks:
            - notification-service
        depends_on:
            - app
            - nginx
        command: /usr/bin/supervisord

networks:
    notification-service:
        driver: bridge
#Volumes
volumes:
    dbmysql:
        driver: local
